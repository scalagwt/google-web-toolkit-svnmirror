<project name="user" default="build" basedir=".">
	<property name="gwt.root" location=".." />
	<property name="project.tail" value="user" />
	<property name="test.args" value="" />
	<import file="${gwt.root}/common.ant.xml" />

	<!--
		Default hosted mode test cases
	-->
	<fileset id="default.tests" dir="${javac.junit.out}" includes="${gwt.junit.testcase.includes}" />

	<property.ensure name="gwt.dev.jar" location="${gwt.build.lib}/gwt-dev.jar" />

	<target name="compile" description="Compile all class files">
		<mkdir dir="${javac.out}" />
		<gwt.javac>
			<classpath>
				<pathelement location="${gwt.tools.lib}/tomcat/servlet-api-2.4.jar" />
				<pathelement location="${gwt.tools.lib}/junit/junit-3.8.1.jar" />
				<pathelement location="${gwt.tools.lib}/jfreechart/jfreechart-1.0.3.jar" />
				<pathelement location="${gwt.tools.lib}/selenium/selenium-java-client-driver.jar" />
				<pathelement location="${gwt.dev.jar}" />
			</classpath>
		</gwt.javac>

		<!-- Build the BrowserManagerServer_Stub to allow remote browser testing -->
		<rmic base="${javac.out}" classname="com.google.gwt.junit.remote.BrowserManagerServer" stubversion="1.2" />
	</target>

	<!--
		Compile test code for dev/core to pick up TypeOracleTestUtils and others.
	-->	
	<target name="compile.dev.core.tests" description="Compiles test dependencies in dev/core">
		<gwt.ant dir="../dev" target="compile.tests" />
	</target>

	<target name="compile.tests" depends="compile.dev.core.tests" description="Compiles the test code for this project">
		<mkdir dir="${javac.junit.out}" />
		<gwt.javac srcdir="test" excludes="com/google/gwt/langtest/**" destdir="${javac.junit.out}">
			<classpath>
				<pathelement location="${javac.out}" />
				<pathelement location="${gwt.build}/out/dev/core/bin-test" />
				<pathelement location="${gwt.tools.lib}/junit/junit-3.8.1.jar" />
				<pathelement location="${gwt.tools.lib}/selenium/selenium-java-client-driver.jar" />
				<pathelement location="${gwt.dev.staging.jar}" />
			</classpath>
		</gwt.javac>
	</target>

	<target name="build" depends="compile" description="Build and package this project">
		<mkdir dir="${gwt.build.lib}" />
		<gwt.jar>
			<fileset dir="src" excludes="**/package.html" />
			<fileset dir="super" excludes="**/package.html" />
			<fileset dir="${javac.out}" />
			<zipfileset src="${gwt.tools.lib}/tomcat/servlet-api-2.4.jar" />
		</gwt.jar>
	</target>

	<target name="checkstyle" description="Static analysis of source">
		<gwt.checkstyle>
			<fileset dir="src" />
			<fileset dir="super/com/google/gwt/emul" />
			<fileset dir="super/com/google/gwt/junit/translatable" />
		</gwt.checkstyle>
	</target>

	<macrodef name="run-test" description="Run a style of test">
		<attribute name="test.mode" />
		<attribute name="test.modeArgs" />
		<sequential>
			<gwt.junit test.args="${test.args} -out www" test.runstyle="-@{test.mode} @{test.modeArgs}" test.out="${junit.out}/@{test.mode}/hosted" test.cases="default.tests">
				<extraclasspaths>
					<pathelement location="${gwt.build}/out/dev/core/bin-test" />
				</extraclasspaths>
			</gwt.junit>
			<gwt.junit test.args="${test.args} -out www -web" test.runstyle="-@{test.mode} @{test.modeArgs}" test.out="${junit.out}/@{test.mode}/web" test.cases="default.tests">
				<extraclasspaths>
					<pathelement location="${gwt.build}/out/dev/core/bin-test" />
				</extraclasspaths>
			</gwt.junit>
		</sequential>
	</macrodef>

	<target name="remoteweb-test" description="Run a remoteweb test at the given host and path" if="gwt.remote.browsers">
		<echo message="Performing remote browser testing at ${gwt.remote.browsers}" />
		<run-test test.mode="remote" test.modeArgs="${gwt.remote.browsers}" />
	</target>

	<target name="selenium-test" description="Run a remote test using Selenium RC test at the given host and path" if="gwt.selenium.hosts">
		<echo message="Performing remote browser testing using Selenium RC at ${gwt.selenium.hosts}" />
		<run-test test.mode="selenium" test.modeArgs="${gwt.selenium.hosts}" />
	</target>

	<target name="manual-test" description="Run tests with a manually-invoked browser" if="gwt.manual.count">
		<echo message="Performing manual browser testing expecting ${gwt.manual.count} hosts" />
		<run-test test.mode="manual" test.modeArgs="${gwt.manual.count}" />
	</target>

	<target name="external-test" description="Run tests with an external command" if="gwt.external.commands">
		<echo message="Performing external browser testing" />
		<run-test test.mode="external" test.modeArgs="${gwt.external.commands}" />
	</target>

	<target name="test" depends="compile, compile.tests" description="Run hosted-mode, web-mode, remoteweb, and selenium tests for this project.">
		<property.ensure name="distro.built" location="${gwt.dev.staging.jar}" message="GWT must be built before performing any tests.  This can be fixed by running ant in the ${gwt.root} directory." />

		<!--
			Run hosted and web mode tests for the platform on which this build
			is executing
		-->
		<limit failonerror="true" hours="2">
			<!-- selenium-test is a no-op unless gwt.selenium.hosts is defined -->
			<antcall target="selenium-test" />
			<!-- remoteweb-test is a no-op unless gwt.remote.browsers is defined -->
			<antcall target="remoteweb-test" />
			<!-- remoteweb-test is a no-op unless gwt.manual.count is defined -->
			<antcall target="manual-test" />
			<!-- remoteweb-test is a no-op unless gwt.external.commands is defined -->
			<antcall target="external-test" />
		</limit>
	</target>

	<target name="clean" description="Cleans this project's intermediate and output files">
		<delete dir="${project.build}" />
		<delete file="${project.lib}" />
	</target>

</project>
