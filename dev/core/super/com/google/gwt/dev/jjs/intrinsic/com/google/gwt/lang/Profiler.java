/*
 * Copyright 2006 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.google.gwt.lang;

/**
 * The client-side interface to the hybrid-mode profiler.
 *
 * This class is only intended to be used by instrumented code
 * generated by the GWT compiler with the -profile switch turned on.
 * Do <b>NOT</b> make calls directly to this class. If at all possible,
 * this class should not end up in the standard user javadoc.
 *
 * Calling methods on this class causes unspecified behavior
 * if the browser is not running in hybrid mode. Using these methods
 * incorrectly causes unspecified behavior. DON'T DO IT!
 *
 */
public class Profiler {

  /**
   * Called when a method has been entered.
   *
   * @param klass The name of the class.
   * @param name The name of the method.
   * @param signature The type signature of the method.
   */

  private static native void methodEntered( String klass, String name, String signature ) /*-{
    $wnd.__gwt_methodEntered( klass, name, signature );
  }-*/;

  /**
   * Called when a method has been exited, normally or by exception.
   *
   * @param klass The name of the class.
   * @param name The name of the method.
   * @param signature The type signature of the method.
   */
  private static native void methodExited( String klass, String name, String signature ) /*-{
    $wnd.__gwt_methodExited( klass, name, signature );
  }-*/;

  // Should probably be JClassType
  // Maybe this signature should change to be a JavaScript object?
  // In general, what is our policy going to be on viewing live values
  // during execution time?
  // void exceptionThrown( String type );
  // void exceptionCaught( String type );

  // Do we need to know from what line of code these were made?
  // How do we tie HTTP requests and responses together?
  // void httpRequest( String requestUrl );
  // void httpResponse( String requestUrl );

  // Do we need to know from what line of code these were made?
  // How do we tie RPC requests and responses together?
  // void rpcRequest( String klass, String name, String signature );
  // void rpcResponse( String klass, String name, String signature );
}
