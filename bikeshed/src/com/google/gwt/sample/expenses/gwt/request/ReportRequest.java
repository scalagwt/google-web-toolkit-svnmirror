/*
 * Copyright 2010 Google Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.google.gwt.sample.expenses.gwt.request;

import com.google.gwt.requestfactory.shared.Instance;
import com.google.gwt.requestfactory.shared.RecordListRequest;
import com.google.gwt.requestfactory.shared.RecordRequest;
import com.google.gwt.requestfactory.shared.RequestObject;
import com.google.gwt.requestfactory.shared.Service;
import com.google.gwt.sample.expenses.server.domain.Report;
import com.google.gwt.valuestore.shared.PropertyReference;

/**
 * "API Generated" request selector interface implemented by objects that give
 * client access to the methods of
 * {@link com.google.gwt.sample.expenses.server.domain.Report}.
 * <p>
 * IRL this class will be generated by a JPA-savvy tool run before compilation.
 */
@Service(Report.class)
public interface ReportRequest {

  /**
   * @return a request object
   */
  RequestObject<Long> countReports();

  /**
   * @return a request object
   */
  RequestObject<Long> countReportsBySearch(Long employeeId,
      String department, String startsWith);

  /**
   * @return a request object
   */
  RecordListRequest<ReportRecord> findAllReports();

  /**
   * @return a request object
   */
  RecordRequest<ReportRecord> findReport(PropertyReference<Long> id);

  /**
   * @return a request object
   */
  RecordListRequest<ReportRecord> findReportEntries(int firstResult,
      int maxResults);

  /**
   * @return a request object
   */
  RecordListRequest<ReportRecord> findReportEntriesBySearch(Long employeeId,
      String department, String startsWith, String orderBy, int firstResult,
      int maxResults);

  /**
   * @return a request object
   */
  RecordListRequest<ReportRecord> findReportsByEmployee(
      PropertyReference<String> id);

  /**
   * @return a request object
   */
  @Instance
  RequestObject<Void> persist(ReportRecord record);

  /**
   * @return a request object
   */
  @Instance
  RequestObject<Void> remove(ReportRecord record);
}
